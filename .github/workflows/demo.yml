name: sync up to codecommit
on: [push]
jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository }}
          fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::044798518090:role/GithubOIDCRole
          aws-region: us-east-1
          mask-aws-account-id: false
          role-skip-session-tagging: true
          role-duration-seconds: 900

      - name: Sync Repository
        run: |
          set +x
          repository_name="$(echo "${{ inputs.repository }}" | sed 's/.*\///g')"
          git config --global credential.helper '!aws codecommit credential-helper $@'
          git config --global credential.UseHttpPath true
          output_json="$(aws codecommit get-repository --repository-name "$repository_name")"
          if [ $? -ne 0 ]; then
            output_json="$(aws codecommit create-repository --repository-name "$repository_name")"
          fi
          if [ $? -ne 0 ]; then
            echo "Could not create repository $repository_name"
            exit 1
          fi
          clone_url="$(echo "$output_json" | python3 -c "import sys, json; print(json.load(sys.stdin)['repositoryMetadata']['cloneUrlHttp'])")"
          git remote add codecommit "$clone_url"
          git push codecommit --force --mirror
        shell: bash
          
      # - name: Sync up to CodeCommit
      #   uses: afinkorea/sync-up-to-codecommit-action@v1
      #   with:
      #     repository_name: demo-codepipeline
      #     aws_region: us-east-1
      #     branch: main

      # - name: PushToCodeCommmit
      #   id: pushtocodecommit
      #   run: |
      #     repourl="https://git-codecommit.us-east-1.amazonaws.com/v1/repos/demo-codepipeline"
      #     ls -la
      #     aws --version
      #     aws sts get-caller-identity

      #     git config --global user.email "githubaction@github.com"
      #     git config --global user.name "Github Action"
      #     git config --global credential.helper '!aws --profile=default codecommit credential-helper $@'
      #     git config --global credential.UseHttpPath true

      #     git clone ${{ github.repository }}
      #     cd demo-aws-codepipeline
      #     git status
      #     git add .
      #     git commit -m "teste"
      #     git remote add codemmit ${repourl}
      #     git push codemmit 
